// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: oracle_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Oracle {

  #region Events
  public partial class QueryCreated : aelf::IEvent<QueryCreated>
  {
    public global::System.Collections.Generic.IEnumerable<QueryCreated> GetIndexed()
    {
      return new List<QueryCreated>
      {
      };
    }

    public QueryCreated GetNonIndexed()
    {
      return new QueryCreated
      {
        Payment = Payment,
        CallbackInfo = CallbackInfo,
        AggregatorContractAddress = AggregatorContractAddress,
        DesignatedNodeList = DesignatedNodeList,
        UrlToQuery = UrlToQuery,
        AttributeToFetch = AttributeToFetch,
        AggregateThreshold = AggregateThreshold,
        QueryManager = QueryManager,
        QueryId = QueryId,
        Token = Token,
      };
    }
  }

  public partial class QueryCancelled : aelf::IEvent<QueryCancelled>
  {
    public global::System.Collections.Generic.IEnumerable<QueryCancelled> GetIndexed()
    {
      return new List<QueryCancelled>
      {
      };
    }

    public QueryCancelled GetNonIndexed()
    {
      return new QueryCancelled
      {
        QueryId = QueryId,
        CancelTime = CancelTime,
      };
    }
  }

  public partial class SufficientDataCollected : aelf::IEvent<SufficientDataCollected>
  {
    public global::System.Collections.Generic.IEnumerable<SufficientDataCollected> GetIndexed()
    {
      return new List<SufficientDataCollected>
      {
      };
    }

    public SufficientDataCollected GetNonIndexed()
    {
      return new SufficientDataCollected
      {
        RequestId = RequestId,
      };
    }
  }

  public partial class SufficientCommitmentsCollected : aelf::IEvent<SufficientCommitmentsCollected>
  {
    public global::System.Collections.Generic.IEnumerable<SufficientCommitmentsCollected> GetIndexed()
    {
      return new List<SufficientCommitmentsCollected>
      {
      };
    }

    public SufficientCommitmentsCollected GetNonIndexed()
    {
      return new SufficientCommitmentsCollected
      {
        QueryId = QueryId,
      };
    }
  }

  public partial class CommitmentRevealed : aelf::IEvent<CommitmentRevealed>
  {
    public global::System.Collections.Generic.IEnumerable<CommitmentRevealed> GetIndexed()
    {
      return new List<CommitmentRevealed>
      {
      };
    }

    public CommitmentRevealed GetNonIndexed()
    {
      return new CommitmentRevealed
      {
        QueryId = QueryId,
        OracleNodeAddress = OracleNodeAddress,
        Commitment = Commitment,
        Data = Data,
        Salt = Salt,
      };
    }
  }

  public partial class QueryCompleted : aelf::IEvent<QueryCompleted>
  {
    public global::System.Collections.Generic.IEnumerable<QueryCompleted> GetIndexed()
    {
      return new List<QueryCompleted>
      {
      };
    }

    public QueryCompleted GetNonIndexed()
    {
      return new QueryCompleted
      {
        QueryId = QueryId,
        Result = Result,
      };
    }
  }

  #endregion
  public static partial class OracleContractContainer
  {
    static readonly string __ServiceName = "OracleContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Contracts.Oracle.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Oracle.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Oracle.QueryInput> __Marshaller_QueryInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Oracle.QueryInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Oracle.CommitInput> __Marshaller_CommitInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Oracle.CommitInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Oracle.RevealInput> __Marshaller_RevealInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Oracle.RevealInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Oracle.SetThresholdInput> __Marshaller_SetThresholdInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Oracle.SetThresholdInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Oracle.QueryRecord> __Marshaller_QueryRecord = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Oracle.QueryRecord.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Oracle.CommitmentMap> __Marshaller_CommitmentMap = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Oracle.CommitmentMap.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Contracts.Oracle.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::AElf.Contracts.Oracle.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Oracle.QueryInput, global::AElf.Types.Hash> __Method_Query = new aelf::Method<global::AElf.Contracts.Oracle.QueryInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "Query",
        __Marshaller_QueryInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::AElf.Contracts.Oracle.CommitInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Commit = new aelf::Method<global::AElf.Contracts.Oracle.CommitInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Commit",
        __Marshaller_CommitInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Oracle.RevealInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Reveal = new aelf::Method<global::AElf.Contracts.Oracle.RevealInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Reveal",
        __Marshaller_RevealInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CancelQuery = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CancelQuery",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeController = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeController",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Oracle.SetThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetThreshold = new aelf::Method<global::AElf.Contracts.Oracle.SetThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetThreshold",
        __Marshaller_SetThresholdInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Oracle.QueryRecord> __Method_GetQueryRecord = new aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Oracle.QueryRecord>(
        aelf::MethodType.View,
        __ServiceName,
        "GetQueryRecord",
        __Marshaller_aelf_Hash,
        __Marshaller_QueryRecord);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Oracle.CommitmentMap> __Method_GetCommitmentMap = new aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Oracle.CommitmentMap>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCommitmentMap",
        __Marshaller_aelf_Hash,
        __Marshaller_CommitmentMap);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetOracleTokenSymbol = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetOracleTokenSymbol",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.Oracle.OracleContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Contracts.Oracle.OracleContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion
  }
}
#endregion

