// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: acs0.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Standards.ACS0 {

  /// <summary>Holder for reflection information generated from acs0.proto</summary>
  internal static partial class Acs0Reflection {

    #region Descriptor
    /// <summary>File descriptor for acs0.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Acs0Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphY3MwLnByb3RvEgRhY3MwGg9hZWxmL2NvcmUucHJvdG8aEmFlbGYvb3B0",
            "aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGh5nb29n",
            "bGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8iogEKDENvbnRyYWN0SW5mbxIV",
            "Cg1zZXJpYWxfbnVtYmVyGAEgASgDEh0KBmF1dGhvchgCIAEoCzINLmFlbGYu",
            "QWRkcmVzcxIQCghjYXRlZ29yeRgDIAEoERIdCgljb2RlX2hhc2gYBCABKAsy",
            "Ci5hZWxmLkhhc2gSGgoSaXNfc3lzdGVtX2NvbnRyYWN0GAUgASgIEg8KB3Zl",
            "cnNpb24YBiABKAUiOQoXQ29udHJhY3REZXBsb3ltZW50SW5wdXQSEAoIY2F0",
            "ZWdvcnkYASABKBESDAoEY29kZRgCIAEoDCL7AgodU3lzdGVtQ29udHJhY3RE",
            "ZXBsb3ltZW50SW5wdXQSEAoIY2F0ZWdvcnkYASABKBESDAoEY29kZRgCIAEo",
            "DBIYCgRuYW1lGAMgASgLMgouYWVsZi5IYXNoEmkKHHRyYW5zYWN0aW9uX21l",
            "dGhvZF9jYWxsX2xpc3QYBCABKAsyQy5hY3MwLlN5c3RlbUNvbnRyYWN0RGVw",
            "bG95bWVudElucHV0LlN5c3RlbVRyYW5zYWN0aW9uTWV0aG9kQ2FsbExpc3Qa",
            "QgobU3lzdGVtVHJhbnNhY3Rpb25NZXRob2RDYWxsEhMKC21ldGhvZF9uYW1l",
            "GAEgASgJEg4KBnBhcmFtcxgCIAEoDBpxCh9TeXN0ZW1UcmFuc2FjdGlvbk1l",
            "dGhvZENhbGxMaXN0Ek4KBXZhbHVlGAEgAygLMj8uYWNzMC5TeXN0ZW1Db250",
            "cmFjdERlcGxveW1lbnRJbnB1dC5TeXN0ZW1UcmFuc2FjdGlvbk1ldGhvZENh",
            "bGwiQwoTQ29udHJhY3RVcGRhdGVJbnB1dBIeCgdhZGRyZXNzGAEgASgLMg0u",
            "YWVsZi5BZGRyZXNzEgwKBGNvZGUYAiABKAwi0wEKFkNvbnRyYWN0Q29kZUNo",
            "ZWNrSW5wdXQSFgoOY29udHJhY3RfaW5wdXQYASABKAwSHgoWaXNfY29udHJh",
            "Y3RfZGVwbG95bWVudBgCIAEoCBIhChljb2RlX2NoZWNrX3JlbGVhc2VfbWV0",
            "aG9kGAMgASgJEjAKHHByb3Bvc2VkX2NvbnRyYWN0X2lucHV0X2hhc2gYBCAB",
            "KAsyCi5hZWxmLkhhc2gSEAoIY2F0ZWdvcnkYBSABKBESGgoSaXNfc3lzdGVt",
            "X2NvbnRyYWN0GAYgASgIIkoKEENvbnRyYWN0UHJvcG9zZWQSMAoccHJvcG9z",
            "ZWRfY29udHJhY3RfaW5wdXRfaGFzaBgBIAEoCzIKLmFlbGYuSGFzaDoEoLsY",
            "ASKvAQoQQ29udHJhY3REZXBsb3llZBIkCgZhdXRob3IYASABKAsyDS5hZWxm",
            "LkFkZHJlc3NCBYiP9QEBEiQKCWNvZGVfaGFzaBgCIAEoCzIKLmFlbGYuSGFz",
            "aEIFiI/1AQESHgoHYWRkcmVzcxgDIAEoCzINLmFlbGYuQWRkcmVzcxIPCgd2",
            "ZXJzaW9uGAQgASgFEhgKBE5hbWUYBSABKAsyCi5hZWxmLkhhc2g6BKC7GAEi",
            "hwEKEUNvZGVDaGVja1JlcXVpcmVkEgwKBGNvZGUYASABKAwSMAoccHJvcG9z",
            "ZWRfY29udHJhY3RfaW5wdXRfaGFzaBgCIAEoCzIKLmFlbGYuSGFzaBIQCghj",
            "YXRlZ29yeRgDIAEoERIaChJpc19zeXN0ZW1fY29udHJhY3QYBCABKAg6BKC7",
            "GAEikQEKC0NvZGVVcGRhdGVkEiUKB2FkZHJlc3MYASABKAsyDS5hZWxmLkFk",
            "ZHJlc3NCBYiP9QEBEiEKDW9sZF9jb2RlX2hhc2gYAiABKAsyCi5hZWxmLkhh",
            "c2gSIQoNbmV3X2NvZGVfaGFzaBgDIAEoCzIKLmFlbGYuSGFzaBIPCgd2ZXJz",
            "aW9uGAQgASgFOgSguxgBInMKIlZhbGlkYXRlU3lzdGVtQ29udHJhY3RBZGRy",
            "ZXNzSW5wdXQSLQoZc3lzdGVtX2NvbnRyYWN0X2hhc2hfbmFtZRgBIAEoCzIK",
            "LmFlbGYuSGFzaBIeCgdhZGRyZXNzGAIgASgLMg0uYWVsZi5BZGRyZXNzImkK",
            "FFJlbGVhc2VDb250cmFjdElucHV0Eh8KC3Byb3Bvc2FsX2lkGAEgASgLMgou",
            "YWVsZi5IYXNoEjAKHHByb3Bvc2VkX2NvbnRyYWN0X2lucHV0X2hhc2gYAiAB",
            "KAsyCi5hZWxmLkhhc2gylwoKBEFDUzASUQoZRGVwbG95U3lzdGVtU21hcnRD",
            "b250cmFjdBIjLmFjczAuU3lzdGVtQ29udHJhY3REZXBsb3ltZW50SW5wdXQa",
            "DS5hZWxmLkFkZHJlc3MiABJFChNEZXBsb3lTbWFydENvbnRyYWN0Eh0uYWNz",
            "MC5Db250cmFjdERlcGxveW1lbnRJbnB1dBoNLmFlbGYuQWRkcmVzcyIAEkEK",
            "E1VwZGF0ZVNtYXJ0Q29udHJhY3QSGS5hY3MwLkNvbnRyYWN0VXBkYXRlSW5w",
            "dXQaDS5hZWxmLkFkZHJlc3MiABJBChJQcm9wb3NlTmV3Q29udHJhY3QSHS5h",
            "Y3MwLkNvbnRyYWN0RGVwbG95bWVudElucHV0GgouYWVsZi5IYXNoIgASRgoY",
            "UHJvcG9zZUNvbnRyYWN0Q29kZUNoZWNrEhwuYWNzMC5Db250cmFjdENvZGVD",
            "aGVja0lucHV0GgouYWVsZi5IYXNoIgASQAoVUHJvcG9zZVVwZGF0ZUNvbnRy",
            "YWN0EhkuYWNzMC5Db250cmFjdFVwZGF0ZUlucHV0GgouYWVsZi5IYXNoIgAS",
            "TwoXUmVsZWFzZUFwcHJvdmVkQ29udHJhY3QSGi5hY3MwLlJlbGVhc2VDb250",
            "cmFjdElucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASUgoaUmVsZWFz",
            "ZUNvZGVDaGVja2VkQ29udHJhY3QSGi5hY3MwLlJlbGVhc2VDb250cmFjdElu",
            "cHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASYwodVmFsaWRhdGVTeXN0",
            "ZW1Db250cmFjdEFkZHJlc3MSKC5hY3MwLlZhbGlkYXRlU3lzdGVtQ29udHJh",
            "Y3RBZGRyZXNzSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJYCiBT",
            "ZXRDb250cmFjdFByb3Bvc2VyUmVxdWlyZWRTdGF0ZRIaLmdvb2dsZS5wcm90",
            "b2J1Zi5Cb29sVmFsdWUaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJZChtD",
            "dXJyZW50Q29udHJhY3RTZXJpYWxOdW1iZXISFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESOwoP",
            "R2V0Q29udHJhY3RJbmZvEg0uYWVsZi5BZGRyZXNzGhIuYWNzMC5Db250cmFj",
            "dEluZm8iBYiJ9wEBEjgKEUdldENvbnRyYWN0QXV0aG9yEg0uYWVsZi5BZGRy",
            "ZXNzGg0uYWVsZi5BZGRyZXNzIgWIifcBARIzCg9HZXRDb250cmFjdEhhc2gS",
            "DS5hZWxmLkFkZHJlc3MaCi5hZWxmLkhhc2giBYiJ9wEBEjwKGEdldENvbnRy",
            "YWN0QWRkcmVzc0J5TmFtZRIKLmFlbGYuSGFzaBoNLmFlbGYuQWRkcmVzcyIF",
            "iIn3AQESXgolR2V0U21hcnRDb250cmFjdFJlZ2lzdHJhdGlvbkJ5QWRkcmVz",
            "cxINLmFlbGYuQWRkcmVzcxofLmFlbGYuU21hcnRDb250cmFjdFJlZ2lzdHJh",
            "dGlvbiIFiIn3AQESXAomR2V0U21hcnRDb250cmFjdFJlZ2lzdHJhdGlvbkJ5",
            "Q29kZUhhc2gSCi5hZWxmLkhhc2gaHy5hZWxmLlNtYXJ0Q29udHJhY3RSZWdp",
            "c3RyYXRpb24iBYiJ9wEBQhaqAhNBRWxmLlN0YW5kYXJkcy5BQ1MwUABiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ContractInfo), global::AElf.Standards.ACS0.ContractInfo.Parser, new[]{ "SerialNumber", "Author", "Category", "CodeHash", "IsSystemContract", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ContractDeploymentInput), global::AElf.Standards.ACS0.ContractDeploymentInput.Parser, new[]{ "Category", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.SystemContractDeploymentInput), global::AElf.Standards.ACS0.SystemContractDeploymentInput.Parser, new[]{ "Category", "Code", "Name", "TransactionMethodCallList" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCall), global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCall.Parser, new[]{ "MethodName", "Params" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCallList), global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCallList.Parser, new[]{ "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ContractUpdateInput), global::AElf.Standards.ACS0.ContractUpdateInput.Parser, new[]{ "Address", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ContractCodeCheckInput), global::AElf.Standards.ACS0.ContractCodeCheckInput.Parser, new[]{ "ContractInput", "IsContractDeployment", "CodeCheckReleaseMethod", "ProposedContractInputHash", "Category", "IsSystemContract" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ContractProposed), global::AElf.Standards.ACS0.ContractProposed.Parser, new[]{ "ProposedContractInputHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ContractDeployed), global::AElf.Standards.ACS0.ContractDeployed.Parser, new[]{ "Author", "CodeHash", "Address", "Version", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.CodeCheckRequired), global::AElf.Standards.ACS0.CodeCheckRequired.Parser, new[]{ "Code", "ProposedContractInputHash", "Category", "IsSystemContract" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.CodeUpdated), global::AElf.Standards.ACS0.CodeUpdated.Parser, new[]{ "Address", "OldCodeHash", "NewCodeHash", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ValidateSystemContractAddressInput), global::AElf.Standards.ACS0.ValidateSystemContractAddressInput.Parser, new[]{ "SystemContractHashName", "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Standards.ACS0.ReleaseContractInput), global::AElf.Standards.ACS0.ReleaseContractInput.Parser, new[]{ "ProposalId", "ProposedContractInputHash" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class ContractInfo : pb::IMessage<ContractInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContractInfo> _parser = new pb::MessageParser<ContractInfo>(() => new ContractInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractInfo(ContractInfo other) : this() {
      serialNumber_ = other.serialNumber_;
      author_ = other.author_ != null ? other.author_.Clone() : null;
      category_ = other.category_;
      codeHash_ = other.codeHash_ != null ? other.codeHash_.Clone() : null;
      isSystemContract_ = other.isSystemContract_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractInfo Clone() {
      return new ContractInfo(this);
    }

    /// <summary>Field number for the "serial_number" field.</summary>
    public const int SerialNumberFieldNumber = 1;
    private long serialNumber_;
    /// <summary>
    /// The serial number of the contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = value;
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 2;
    private global::AElf.Types.Address author_;
    /// <summary>
    /// The author of the contract, this is the person who deployed the contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private int category_;
    /// <summary>
    /// The category of contract code(0: C#).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "code_hash" field.</summary>
    public const int CodeHashFieldNumber = 4;
    private global::AElf.Types.Hash codeHash_;
    /// <summary>
    /// The hash of the contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash CodeHash {
      get { return codeHash_; }
      set {
        codeHash_ = value;
      }
    }

    /// <summary>Field number for the "is_system_contract" field.</summary>
    public const int IsSystemContractFieldNumber = 5;
    private bool isSystemContract_;
    /// <summary>
    /// Whether it is a system contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSystemContract {
      get { return isSystemContract_; }
      set {
        isSystemContract_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 6;
    private int version_;
    /// <summary>
    /// The version of the current contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerialNumber != other.SerialNumber) return false;
      if (!object.Equals(Author, other.Author)) return false;
      if (Category != other.Category) return false;
      if (!object.Equals(CodeHash, other.CodeHash)) return false;
      if (IsSystemContract != other.IsSystemContract) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SerialNumber != 0L) hash ^= SerialNumber.GetHashCode();
      if (author_ != null) hash ^= Author.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (codeHash_ != null) hash ^= CodeHash.GetHashCode();
      if (IsSystemContract != false) hash ^= IsSystemContract.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SerialNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SerialNumber);
      }
      if (author_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Author);
      }
      if (Category != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Category);
      }
      if (codeHash_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CodeHash);
      }
      if (IsSystemContract != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSystemContract);
      }
      if (Version != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SerialNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SerialNumber);
      }
      if (author_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Author);
      }
      if (Category != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Category);
      }
      if (codeHash_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CodeHash);
      }
      if (IsSystemContract != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSystemContract);
      }
      if (Version != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SerialNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SerialNumber);
      }
      if (author_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Author);
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Category);
      }
      if (codeHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodeHash);
      }
      if (IsSystemContract != false) {
        size += 1 + 1;
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractInfo other) {
      if (other == null) {
        return;
      }
      if (other.SerialNumber != 0L) {
        SerialNumber = other.SerialNumber;
      }
      if (other.author_ != null) {
        if (author_ == null) {
          Author = new global::AElf.Types.Address();
        }
        Author.MergeFrom(other.Author);
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.codeHash_ != null) {
        if (codeHash_ == null) {
          CodeHash = new global::AElf.Types.Hash();
        }
        CodeHash.MergeFrom(other.CodeHash);
      }
      if (other.IsSystemContract != false) {
        IsSystemContract = other.IsSystemContract;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SerialNumber = input.ReadInt64();
            break;
          }
          case 18: {
            if (author_ == null) {
              Author = new global::AElf.Types.Address();
            }
            input.ReadMessage(Author);
            break;
          }
          case 24: {
            Category = input.ReadSInt32();
            break;
          }
          case 34: {
            if (codeHash_ == null) {
              CodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(CodeHash);
            break;
          }
          case 40: {
            IsSystemContract = input.ReadBool();
            break;
          }
          case 48: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SerialNumber = input.ReadInt64();
            break;
          }
          case 18: {
            if (author_ == null) {
              Author = new global::AElf.Types.Address();
            }
            input.ReadMessage(Author);
            break;
          }
          case 24: {
            Category = input.ReadSInt32();
            break;
          }
          case 34: {
            if (codeHash_ == null) {
              CodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(CodeHash);
            break;
          }
          case 40: {
            IsSystemContract = input.ReadBool();
            break;
          }
          case 48: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ContractDeploymentInput : pb::IMessage<ContractDeploymentInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContractDeploymentInput> _parser = new pb::MessageParser<ContractDeploymentInput>(() => new ContractDeploymentInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractDeploymentInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractDeploymentInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractDeploymentInput(ContractDeploymentInput other) : this() {
      category_ = other.category_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractDeploymentInput Clone() {
      return new ContractDeploymentInput(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private int category_;
    /// <summary>
    /// The category of contract code(0: C#).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private pb::ByteString code_ = pb::ByteString.Empty;
    /// <summary>
    /// The byte array of the contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractDeploymentInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractDeploymentInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category != 0) hash ^= Category.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Category);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Category);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Category);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractDeploymentInput other) {
      if (other == null) {
        return;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Category = input.ReadSInt32();
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Category = input.ReadSInt32();
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class SystemContractDeploymentInput : pb::IMessage<SystemContractDeploymentInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SystemContractDeploymentInput> _parser = new pb::MessageParser<SystemContractDeploymentInput>(() => new SystemContractDeploymentInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemContractDeploymentInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemContractDeploymentInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemContractDeploymentInput(SystemContractDeploymentInput other) : this() {
      category_ = other.category_;
      code_ = other.code_;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      transactionMethodCallList_ = other.transactionMethodCallList_ != null ? other.transactionMethodCallList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemContractDeploymentInput Clone() {
      return new SystemContractDeploymentInput(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private int category_;
    /// <summary>
    /// The category of contract code(0: C#).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private pb::ByteString code_ = pb::ByteString.Empty;
    /// <summary>
    /// The byte array of the contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private global::AElf.Types.Hash name_;
    /// <summary>
    /// The name of the contract. It has to be unique.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "transaction_method_call_list" field.</summary>
    public const int TransactionMethodCallListFieldNumber = 4;
    private global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCallList transactionMethodCallList_;
    /// <summary>
    /// An initial list of transactions for the system contract,
    /// which is executed in sequence when the contract is deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCallList TransactionMethodCallList {
      get { return transactionMethodCallList_; }
      set {
        transactionMethodCallList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemContractDeploymentInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemContractDeploymentInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (Code != other.Code) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(TransactionMethodCallList, other.TransactionMethodCallList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category != 0) hash ^= Category.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (transactionMethodCallList_ != null) hash ^= TransactionMethodCallList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Category);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (name_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Name);
      }
      if (transactionMethodCallList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransactionMethodCallList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Category);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (name_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Name);
      }
      if (transactionMethodCallList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransactionMethodCallList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Category);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Code);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (transactionMethodCallList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionMethodCallList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemContractDeploymentInput other) {
      if (other == null) {
        return;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::AElf.Types.Hash();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.transactionMethodCallList_ != null) {
        if (transactionMethodCallList_ == null) {
          TransactionMethodCallList = new global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCallList();
        }
        TransactionMethodCallList.MergeFrom(other.TransactionMethodCallList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Category = input.ReadSInt32();
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
          case 26: {
            if (name_ == null) {
              Name = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Name);
            break;
          }
          case 34: {
            if (transactionMethodCallList_ == null) {
              TransactionMethodCallList = new global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCallList();
            }
            input.ReadMessage(TransactionMethodCallList);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Category = input.ReadSInt32();
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
          case 26: {
            if (name_ == null) {
              Name = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Name);
            break;
          }
          case 34: {
            if (transactionMethodCallList_ == null) {
              TransactionMethodCallList = new global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCallList();
            }
            input.ReadMessage(TransactionMethodCallList);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SystemContractDeploymentInput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal sealed partial class SystemTransactionMethodCall : pb::IMessage<SystemTransactionMethodCall>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SystemTransactionMethodCall> _parser = new pb::MessageParser<SystemTransactionMethodCall>(() => new SystemTransactionMethodCall());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SystemTransactionMethodCall> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AElf.Standards.ACS0.SystemContractDeploymentInput.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SystemTransactionMethodCall() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SystemTransactionMethodCall(SystemTransactionMethodCall other) : this() {
          methodName_ = other.methodName_;
          params_ = other.params_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SystemTransactionMethodCall Clone() {
          return new SystemTransactionMethodCall(this);
        }

        /// <summary>Field number for the "method_name" field.</summary>
        public const int MethodNameFieldNumber = 1;
        private string methodName_ = "";
        /// <summary>
        /// The method name of system transaction.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MethodName {
          get { return methodName_; }
          set {
            methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "params" field.</summary>
        public const int ParamsFieldNumber = 2;
        private pb::ByteString params_ = pb::ByteString.Empty;
        /// <summary>
        /// The params of system transaction method.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Params {
          get { return params_; }
          set {
            params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SystemTransactionMethodCall);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SystemTransactionMethodCall other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MethodName != other.MethodName) return false;
          if (Params != other.Params) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
          if (Params.Length != 0) hash ^= Params.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MethodName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MethodName);
          }
          if (Params.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Params);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MethodName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MethodName);
          }
          if (Params.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Params);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MethodName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
          }
          if (Params.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Params);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SystemTransactionMethodCall other) {
          if (other == null) {
            return;
          }
          if (other.MethodName.Length != 0) {
            MethodName = other.MethodName;
          }
          if (other.Params.Length != 0) {
            Params = other.Params;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MethodName = input.ReadString();
                break;
              }
              case 18: {
                Params = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MethodName = input.ReadString();
                break;
              }
              case 18: {
                Params = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      internal sealed partial class SystemTransactionMethodCallList : pb::IMessage<SystemTransactionMethodCallList>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SystemTransactionMethodCallList> _parser = new pb::MessageParser<SystemTransactionMethodCallList>(() => new SystemTransactionMethodCallList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SystemTransactionMethodCallList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AElf.Standards.ACS0.SystemContractDeploymentInput.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SystemTransactionMethodCallList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SystemTransactionMethodCallList(SystemTransactionMethodCallList other) : this() {
          value_ = other.value_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SystemTransactionMethodCallList Clone() {
          return new SystemTransactionMethodCallList(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCall> _repeated_value_codec
            = pb::FieldCodec.ForMessage(10, global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCall.Parser);
        private readonly pbc::RepeatedField<global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCall> value_ = new pbc::RepeatedField<global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCall>();
        /// <summary>
        /// The list of system transactions.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AElf.Standards.ACS0.SystemContractDeploymentInput.Types.SystemTransactionMethodCall> Value {
          get { return value_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SystemTransactionMethodCallList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SystemTransactionMethodCallList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!value_.Equals(other.value_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= value_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          value_.WriteTo(output, _repeated_value_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          value_.WriteTo(ref output, _repeated_value_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += value_.CalculateSize(_repeated_value_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SystemTransactionMethodCallList other) {
          if (other == null) {
            return;
          }
          value_.Add(other.value_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                value_.AddEntriesFrom(input, _repeated_value_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                value_.AddEntriesFrom(ref input, _repeated_value_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  internal sealed partial class ContractUpdateInput : pb::IMessage<ContractUpdateInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContractUpdateInput> _parser = new pb::MessageParser<ContractUpdateInput>(() => new ContractUpdateInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractUpdateInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractUpdateInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractUpdateInput(ContractUpdateInput other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractUpdateInput Clone() {
      return new ContractUpdateInput(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::AElf.Types.Address address_;
    /// <summary>
    /// The contract address that needs to be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private pb::ByteString code_ = pb::ByteString.Empty;
    /// <summary>
    /// The byte array of the new contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractUpdateInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractUpdateInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractUpdateInput other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Types.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            Code = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ContractCodeCheckInput : pb::IMessage<ContractCodeCheckInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContractCodeCheckInput> _parser = new pb::MessageParser<ContractCodeCheckInput>(() => new ContractCodeCheckInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractCodeCheckInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractCodeCheckInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractCodeCheckInput(ContractCodeCheckInput other) : this() {
      contractInput_ = other.contractInput_;
      isContractDeployment_ = other.isContractDeployment_;
      codeCheckReleaseMethod_ = other.codeCheckReleaseMethod_;
      proposedContractInputHash_ = other.proposedContractInputHash_ != null ? other.proposedContractInputHash_.Clone() : null;
      category_ = other.category_;
      isSystemContract_ = other.isSystemContract_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractCodeCheckInput Clone() {
      return new ContractCodeCheckInput(this);
    }

    /// <summary>Field number for the "contract_input" field.</summary>
    public const int ContractInputFieldNumber = 1;
    private pb::ByteString contractInput_ = pb::ByteString.Empty;
    /// <summary>
    /// The byte array of the contract code to be checked.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractInput {
      get { return contractInput_; }
      set {
        contractInput_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_contract_deployment" field.</summary>
    public const int IsContractDeploymentFieldNumber = 2;
    private bool isContractDeployment_;
    /// <summary>
    /// Whether the input contract is to be deployed or updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsContractDeployment {
      get { return isContractDeployment_; }
      set {
        isContractDeployment_ = value;
      }
    }

    /// <summary>Field number for the "code_check_release_method" field.</summary>
    public const int CodeCheckReleaseMethodFieldNumber = 3;
    private string codeCheckReleaseMethod_ = "";
    /// <summary>
    /// Method to call after code check complete(DeploySmartContract or UpdateSmartContract).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodeCheckReleaseMethod {
      get { return codeCheckReleaseMethod_; }
      set {
        codeCheckReleaseMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proposed_contract_input_hash" field.</summary>
    public const int ProposedContractInputHashFieldNumber = 4;
    private global::AElf.Types.Hash proposedContractInputHash_;
    /// <summary>
    /// The id of the proposed contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposedContractInputHash {
      get { return proposedContractInputHash_; }
      set {
        proposedContractInputHash_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 5;
    private int category_;
    /// <summary>
    /// The category of contract code(0: C#).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "is_system_contract" field.</summary>
    public const int IsSystemContractFieldNumber = 6;
    private bool isSystemContract_;
    /// <summary>
    /// Indicates if the contract is the system contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSystemContract {
      get { return isSystemContract_; }
      set {
        isSystemContract_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractCodeCheckInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractCodeCheckInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractInput != other.ContractInput) return false;
      if (IsContractDeployment != other.IsContractDeployment) return false;
      if (CodeCheckReleaseMethod != other.CodeCheckReleaseMethod) return false;
      if (!object.Equals(ProposedContractInputHash, other.ProposedContractInputHash)) return false;
      if (Category != other.Category) return false;
      if (IsSystemContract != other.IsSystemContract) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractInput.Length != 0) hash ^= ContractInput.GetHashCode();
      if (IsContractDeployment != false) hash ^= IsContractDeployment.GetHashCode();
      if (CodeCheckReleaseMethod.Length != 0) hash ^= CodeCheckReleaseMethod.GetHashCode();
      if (proposedContractInputHash_ != null) hash ^= ProposedContractInputHash.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (IsSystemContract != false) hash ^= IsSystemContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContractInput.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ContractInput);
      }
      if (IsContractDeployment != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsContractDeployment);
      }
      if (CodeCheckReleaseMethod.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CodeCheckReleaseMethod);
      }
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (Category != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Category);
      }
      if (IsSystemContract != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsSystemContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContractInput.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ContractInput);
      }
      if (IsContractDeployment != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsContractDeployment);
      }
      if (CodeCheckReleaseMethod.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CodeCheckReleaseMethod);
      }
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (Category != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Category);
      }
      if (IsSystemContract != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsSystemContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractInput.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractInput);
      }
      if (IsContractDeployment != false) {
        size += 1 + 1;
      }
      if (CodeCheckReleaseMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeCheckReleaseMethod);
      }
      if (proposedContractInputHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedContractInputHash);
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Category);
      }
      if (IsSystemContract != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractCodeCheckInput other) {
      if (other == null) {
        return;
      }
      if (other.ContractInput.Length != 0) {
        ContractInput = other.ContractInput;
      }
      if (other.IsContractDeployment != false) {
        IsContractDeployment = other.IsContractDeployment;
      }
      if (other.CodeCheckReleaseMethod.Length != 0) {
        CodeCheckReleaseMethod = other.CodeCheckReleaseMethod;
      }
      if (other.proposedContractInputHash_ != null) {
        if (proposedContractInputHash_ == null) {
          ProposedContractInputHash = new global::AElf.Types.Hash();
        }
        ProposedContractInputHash.MergeFrom(other.ProposedContractInputHash);
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.IsSystemContract != false) {
        IsSystemContract = other.IsSystemContract;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractInput = input.ReadBytes();
            break;
          }
          case 16: {
            IsContractDeployment = input.ReadBool();
            break;
          }
          case 26: {
            CodeCheckReleaseMethod = input.ReadString();
            break;
          }
          case 34: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
          case 40: {
            Category = input.ReadSInt32();
            break;
          }
          case 48: {
            IsSystemContract = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContractInput = input.ReadBytes();
            break;
          }
          case 16: {
            IsContractDeployment = input.ReadBool();
            break;
          }
          case 26: {
            CodeCheckReleaseMethod = input.ReadString();
            break;
          }
          case 34: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
          case 40: {
            Category = input.ReadSInt32();
            break;
          }
          case 48: {
            IsSystemContract = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ContractProposed : pb::IMessage<ContractProposed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContractProposed> _parser = new pb::MessageParser<ContractProposed>(() => new ContractProposed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractProposed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractProposed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractProposed(ContractProposed other) : this() {
      proposedContractInputHash_ = other.proposedContractInputHash_ != null ? other.proposedContractInputHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractProposed Clone() {
      return new ContractProposed(this);
    }

    /// <summary>Field number for the "proposed_contract_input_hash" field.</summary>
    public const int ProposedContractInputHashFieldNumber = 1;
    private global::AElf.Types.Hash proposedContractInputHash_;
    /// <summary>
    /// The id of the proposed contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposedContractInputHash {
      get { return proposedContractInputHash_; }
      set {
        proposedContractInputHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractProposed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractProposed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposedContractInputHash, other.ProposedContractInputHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposedContractInputHash_ != null) hash ^= ProposedContractInputHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposedContractInputHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedContractInputHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractProposed other) {
      if (other == null) {
        return;
      }
      if (other.proposedContractInputHash_ != null) {
        if (proposedContractInputHash_ == null) {
          ProposedContractInputHash = new global::AElf.Types.Hash();
        }
        ProposedContractInputHash.MergeFrom(other.ProposedContractInputHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ContractDeployed : pb::IMessage<ContractDeployed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContractDeployed> _parser = new pb::MessageParser<ContractDeployed>(() => new ContractDeployed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractDeployed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractDeployed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractDeployed(ContractDeployed other) : this() {
      author_ = other.author_ != null ? other.author_.Clone() : null;
      codeHash_ = other.codeHash_ != null ? other.codeHash_.Clone() : null;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      version_ = other.version_;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractDeployed Clone() {
      return new ContractDeployed(this);
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 1;
    private global::AElf.Types.Address author_;
    /// <summary>
    /// The author of the contract, this is the person who deployed the contract. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }

    /// <summary>Field number for the "code_hash" field.</summary>
    public const int CodeHashFieldNumber = 2;
    private global::AElf.Types.Hash codeHash_;
    /// <summary>
    /// The hash of the contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash CodeHash {
      get { return codeHash_; }
      set {
        codeHash_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private global::AElf.Types.Address address_;
    /// <summary>
    /// The address of the contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private int version_;
    /// <summary>
    /// The version of the current contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 5;
    private global::AElf.Types.Hash name_;
    /// <summary>
    /// The name of the contract. It has to be unique.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractDeployed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractDeployed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Author, other.Author)) return false;
      if (!object.Equals(CodeHash, other.CodeHash)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if (Version != other.Version) return false;
      if (!object.Equals(Name, other.Name)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (author_ != null) hash ^= Author.GetHashCode();
      if (codeHash_ != null) hash ^= CodeHash.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (author_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Author);
      }
      if (codeHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CodeHash);
      }
      if (address_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Address);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (name_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (author_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Author);
      }
      if (codeHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CodeHash);
      }
      if (address_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Address);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (name_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (author_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Author);
      }
      if (codeHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodeHash);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractDeployed other) {
      if (other == null) {
        return;
      }
      if (other.author_ != null) {
        if (author_ == null) {
          Author = new global::AElf.Types.Address();
        }
        Author.MergeFrom(other.Author);
      }
      if (other.codeHash_ != null) {
        if (codeHash_ == null) {
          CodeHash = new global::AElf.Types.Hash();
        }
        CodeHash.MergeFrom(other.CodeHash);
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Types.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::AElf.Types.Hash();
        }
        Name.MergeFrom(other.Name);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (author_ == null) {
              Author = new global::AElf.Types.Address();
            }
            input.ReadMessage(Author);
            break;
          }
          case 18: {
            if (codeHash_ == null) {
              CodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(CodeHash);
            break;
          }
          case 26: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
          case 42: {
            if (name_ == null) {
              Name = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Name);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (author_ == null) {
              Author = new global::AElf.Types.Address();
            }
            input.ReadMessage(Author);
            break;
          }
          case 18: {
            if (codeHash_ == null) {
              CodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(CodeHash);
            break;
          }
          case 26: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
          case 42: {
            if (name_ == null) {
              Name = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Name);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class CodeCheckRequired : pb::IMessage<CodeCheckRequired>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CodeCheckRequired> _parser = new pb::MessageParser<CodeCheckRequired>(() => new CodeCheckRequired());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CodeCheckRequired> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeCheckRequired() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeCheckRequired(CodeCheckRequired other) : this() {
      code_ = other.code_;
      proposedContractInputHash_ = other.proposedContractInputHash_ != null ? other.proposedContractInputHash_.Clone() : null;
      category_ = other.category_;
      isSystemContract_ = other.isSystemContract_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeCheckRequired Clone() {
      return new CodeCheckRequired(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private pb::ByteString code_ = pb::ByteString.Empty;
    /// <summary>
    /// The byte array of the contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proposed_contract_input_hash" field.</summary>
    public const int ProposedContractInputHashFieldNumber = 2;
    private global::AElf.Types.Hash proposedContractInputHash_;
    /// <summary>
    /// The id of the proposed contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposedContractInputHash {
      get { return proposedContractInputHash_; }
      set {
        proposedContractInputHash_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private int category_;
    /// <summary>
    /// The category of contract code(0: C#).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "is_system_contract" field.</summary>
    public const int IsSystemContractFieldNumber = 4;
    private bool isSystemContract_;
    /// <summary>
    /// Indicates if the contract is the system contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSystemContract {
      get { return isSystemContract_; }
      set {
        isSystemContract_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CodeCheckRequired);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CodeCheckRequired other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(ProposedContractInputHash, other.ProposedContractInputHash)) return false;
      if (Category != other.Category) return false;
      if (IsSystemContract != other.IsSystemContract) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (proposedContractInputHash_ != null) hash ^= ProposedContractInputHash.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (IsSystemContract != false) hash ^= IsSystemContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Code);
      }
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (Category != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Category);
      }
      if (IsSystemContract != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsSystemContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Code);
      }
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (Category != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Category);
      }
      if (IsSystemContract != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsSystemContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Code);
      }
      if (proposedContractInputHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedContractInputHash);
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Category);
      }
      if (IsSystemContract != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CodeCheckRequired other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.proposedContractInputHash_ != null) {
        if (proposedContractInputHash_ == null) {
          ProposedContractInputHash = new global::AElf.Types.Hash();
        }
        ProposedContractInputHash.MergeFrom(other.ProposedContractInputHash);
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.IsSystemContract != false) {
        IsSystemContract = other.IsSystemContract;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadBytes();
            break;
          }
          case 18: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
          case 24: {
            Category = input.ReadSInt32();
            break;
          }
          case 32: {
            IsSystemContract = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadBytes();
            break;
          }
          case 18: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
          case 24: {
            Category = input.ReadSInt32();
            break;
          }
          case 32: {
            IsSystemContract = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class CodeUpdated : pb::IMessage<CodeUpdated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CodeUpdated> _parser = new pb::MessageParser<CodeUpdated>(() => new CodeUpdated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CodeUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeUpdated(CodeUpdated other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      oldCodeHash_ = other.oldCodeHash_ != null ? other.oldCodeHash_.Clone() : null;
      newCodeHash_ = other.newCodeHash_ != null ? other.newCodeHash_.Clone() : null;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeUpdated Clone() {
      return new CodeUpdated(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::AElf.Types.Address address_;
    /// <summary>
    /// The address of the updated contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "old_code_hash" field.</summary>
    public const int OldCodeHashFieldNumber = 2;
    private global::AElf.Types.Hash oldCodeHash_;
    /// <summary>
    /// The byte array of the old contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash OldCodeHash {
      get { return oldCodeHash_; }
      set {
        oldCodeHash_ = value;
      }
    }

    /// <summary>Field number for the "new_code_hash" field.</summary>
    public const int NewCodeHashFieldNumber = 3;
    private global::AElf.Types.Hash newCodeHash_;
    /// <summary>
    /// The byte array of the new contract code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash NewCodeHash {
      get { return newCodeHash_; }
      set {
        newCodeHash_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private int version_;
    /// <summary>
    /// The version of the current contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CodeUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CodeUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(OldCodeHash, other.OldCodeHash)) return false;
      if (!object.Equals(NewCodeHash, other.NewCodeHash)) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (oldCodeHash_ != null) hash ^= OldCodeHash.GetHashCode();
      if (newCodeHash_ != null) hash ^= NewCodeHash.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (oldCodeHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OldCodeHash);
      }
      if (newCodeHash_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NewCodeHash);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (oldCodeHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OldCodeHash);
      }
      if (newCodeHash_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NewCodeHash);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (oldCodeHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldCodeHash);
      }
      if (newCodeHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewCodeHash);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CodeUpdated other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Types.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.oldCodeHash_ != null) {
        if (oldCodeHash_ == null) {
          OldCodeHash = new global::AElf.Types.Hash();
        }
        OldCodeHash.MergeFrom(other.OldCodeHash);
      }
      if (other.newCodeHash_ != null) {
        if (newCodeHash_ == null) {
          NewCodeHash = new global::AElf.Types.Hash();
        }
        NewCodeHash.MergeFrom(other.NewCodeHash);
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            if (oldCodeHash_ == null) {
              OldCodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OldCodeHash);
            break;
          }
          case 26: {
            if (newCodeHash_ == null) {
              NewCodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(NewCodeHash);
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            if (oldCodeHash_ == null) {
              OldCodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OldCodeHash);
            break;
          }
          case 26: {
            if (newCodeHash_ == null) {
              NewCodeHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(NewCodeHash);
            break;
          }
          case 32: {
            Version = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ValidateSystemContractAddressInput : pb::IMessage<ValidateSystemContractAddressInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidateSystemContractAddressInput> _parser = new pb::MessageParser<ValidateSystemContractAddressInput>(() => new ValidateSystemContractAddressInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidateSystemContractAddressInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateSystemContractAddressInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateSystemContractAddressInput(ValidateSystemContractAddressInput other) : this() {
      systemContractHashName_ = other.systemContractHashName_ != null ? other.systemContractHashName_.Clone() : null;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateSystemContractAddressInput Clone() {
      return new ValidateSystemContractAddressInput(this);
    }

    /// <summary>Field number for the "system_contract_hash_name" field.</summary>
    public const int SystemContractHashNameFieldNumber = 1;
    private global::AElf.Types.Hash systemContractHashName_;
    /// <summary>
    /// The name hash of the contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash SystemContractHashName {
      get { return systemContractHashName_; }
      set {
        systemContractHashName_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private global::AElf.Types.Address address_;
    /// <summary>
    /// The address of the contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidateSystemContractAddressInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidateSystemContractAddressInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SystemContractHashName, other.SystemContractHashName)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (systemContractHashName_ != null) hash ^= SystemContractHashName.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (systemContractHashName_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SystemContractHashName);
      }
      if (address_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (systemContractHashName_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SystemContractHashName);
      }
      if (address_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (systemContractHashName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemContractHashName);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidateSystemContractAddressInput other) {
      if (other == null) {
        return;
      }
      if (other.systemContractHashName_ != null) {
        if (systemContractHashName_ == null) {
          SystemContractHashName = new global::AElf.Types.Hash();
        }
        SystemContractHashName.MergeFrom(other.SystemContractHashName);
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Types.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (systemContractHashName_ == null) {
              SystemContractHashName = new global::AElf.Types.Hash();
            }
            input.ReadMessage(SystemContractHashName);
            break;
          }
          case 18: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (systemContractHashName_ == null) {
              SystemContractHashName = new global::AElf.Types.Hash();
            }
            input.ReadMessage(SystemContractHashName);
            break;
          }
          case 18: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ReleaseContractInput : pb::IMessage<ReleaseContractInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReleaseContractInput> _parser = new pb::MessageParser<ReleaseContractInput>(() => new ReleaseContractInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReleaseContractInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Standards.ACS0.Acs0Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseContractInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseContractInput(ReleaseContractInput other) : this() {
      proposalId_ = other.proposalId_ != null ? other.proposalId_.Clone() : null;
      proposedContractInputHash_ = other.proposedContractInputHash_ != null ? other.proposedContractInputHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseContractInput Clone() {
      return new ReleaseContractInput(this);
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 1;
    private global::AElf.Types.Hash proposalId_;
    /// <summary>
    /// The hash of the proposal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    /// <summary>Field number for the "proposed_contract_input_hash" field.</summary>
    public const int ProposedContractInputHashFieldNumber = 2;
    private global::AElf.Types.Hash proposedContractInputHash_;
    /// <summary>
    /// The id of the proposed contract.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposedContractInputHash {
      get { return proposedContractInputHash_; }
      set {
        proposedContractInputHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReleaseContractInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReleaseContractInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposalId, other.ProposalId)) return false;
      if (!object.Equals(ProposedContractInputHash, other.ProposedContractInputHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposalId_ != null) hash ^= ProposalId.GetHashCode();
      if (proposedContractInputHash_ != null) hash ^= ProposedContractInputHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (proposalId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalId);
      }
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (proposalId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalId);
      }
      if (proposedContractInputHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProposedContractInputHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposalId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposalId);
      }
      if (proposedContractInputHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedContractInputHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReleaseContractInput other) {
      if (other == null) {
        return;
      }
      if (other.proposalId_ != null) {
        if (proposalId_ == null) {
          ProposalId = new global::AElf.Types.Hash();
        }
        ProposalId.MergeFrom(other.ProposalId);
      }
      if (other.proposedContractInputHash_ != null) {
        if (proposedContractInputHash_ == null) {
          ProposedContractInputHash = new global::AElf.Types.Hash();
        }
        ProposedContractInputHash.MergeFrom(other.ProposedContractInputHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposalId_ == null) {
              ProposalId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposalId);
            break;
          }
          case 18: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (proposalId_ == null) {
              ProposalId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposalId);
            break;
          }
          case 18: {
            if (proposedContractInputHash_ == null) {
              ProposedContractInputHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposedContractInputHash);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
