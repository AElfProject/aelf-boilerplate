// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: report_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.Report {

  /// <summary>Holder for reflection information generated from report_contract.proto</summary>
  public static partial class ReportContractReflection {

    #region Descriptor
    /// <summary>File descriptor for report_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReportContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVyZXBvcnRfY29udHJhY3QucHJvdG8aD2FlbGYvY29yZS5wcm90bxoSYWVs",
            "Zi9vcHRpb25zLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8a",
            "H2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHmdvb2dsZS9wcm90",
            "b2J1Zi93cmFwcGVycy5wcm90bxoUY2FsbGJhY2tfaW5wdXQucHJvdG8icQoP",
            "SW5pdGlhbGl6ZUlucHV0Ei4KF29yYWNsZV9jb250cmFjdF9hZGRyZXNzGAEg",
            "ASgLMg0uYWVsZi5BZGRyZXNzEhIKCnJlcG9ydF9mZWUYAiABKAMSGgoSYXBw",
            "bHlfb2JzZXJ2ZXJfZmVlGAMgASgDIqsBChBRdWVyeU9yYWNsZUlucHV0Eg8K",
            "B3BheW1lbnQYASABKAMSIQoZZXRoZXJldW1fY29udHJhY3RfYWRkcmVzcxgC",
            "IAEoCRIbChNhZ2dyZWdhdGVfdGhyZXNob2xkGAMgASgFEjIKG2FnZ3JlZ2F0",
            "b3JfY29udHJhY3RfYWRkcmVzcxgEIAEoCzINLmFlbGYuQWRkcmVzcxISCgpu",
            "b2RlX2luZGV4GAUgASgFIlwKEkNvbmZpcm1SZXBvcnRJbnB1dBIhChlldGhl",
            "cmV1bV9jb250cmFjdF9hZGRyZXNzGAEgASgJEhAKCHJvdW5kX2lkGAIgASgD",
            "EhEKCXNpZ25hdHVyZRgDIAEoCSJ2CgZSZXBvcnQSHAoIcXVlcnlfaWQYASAB",
            "KAsyCi5hZWxmLkhhc2gSEAoIcm91bmRfaWQYAiABKAMSIwoMb2JzZXJ2YXRp",
            "b25zGAMgASgLMg0uT2JzZXJ2YXRpb25zEhcKD2FnZ3JlZ2F0ZWRfZGF0YRgE",
            "IAEoDCJYChFSZXBvcnRRdWVyeVJlY29yZBIqChNvcmlnaW5fcXVlcnlfc2Vu",
            "ZGVyGAEgASgLMg0uYWVsZi5BZGRyZXNzEhcKD3BhaWRfcmVwb3J0X2ZlZRgC",
            "IAEoAyIsCgxPYnNlcnZlckxpc3QSHAoFdmFsdWUYASADKAsyDS5hZWxmLkFk",
            "ZHJlc3MiNwoSUHJvcG9zZVJlcG9ydElucHV0EiEKDXF1ZXJ5X2lkX2xpc3QY",
            "ASADKAsyCi5hZWxmLkhhc2giKwoMT2JzZXJ2YXRpb25zEhsKBXZhbHVlGAEg",
            "AygLMgwuT2JzZXJ2YXRpb24iKAoLT2JzZXJ2YXRpb24SCwoDa2V5GAEgASgJ",
            "EgwKBGRhdGEYAiABKAwiaAoRR2V0U2lnbmF0dXJlSW5wdXQSIQoZZXRoZXJl",
            "dW1fY29udHJhY3RfYWRkcmVzcxgBIAEoCRIQCghyb3VuZF9pZBgCIAEoAxIe",
            "CgdhZGRyZXNzGAMgASgLMg0uYWVsZi5BZGRyZXNzIpoCCh5PZmZDaGFpbkFn",
            "Z3JlZ2F0b3JDb250cmFjdEluZm8SMwocb2JzZXJ2ZXJfYXNzb2NpYXRpb25f",
            "YWRkcmVzcxgBIAEoCzINLmFlbGYuQWRkcmVzcxIlCg5vZmZfY2hhaW5faW5m",
            "bxgCIAMoCzINLk9mZkNoYWluSW5mbxIhChlldGhlcmV1bV9jb250cmFjdF9h",
            "ZGRyZXNzGAMgASgJEhUKDWNvbmZpZ19kaWdlc3QYBCABKAwSGwoTYWdncmVn",
            "YXRlX3RocmVzaG9sZBgFIAEoBRIyChthZ2dyZWdhdG9yX2NvbnRyYWN0X2Fk",
            "ZHJlc3MYBiABKAsyDS5hZWxmLkFkZHJlc3MSEQoJcm91bmRfaWRzGAcgAygF",
            "IvQBChpBZGRPZmZDaGFpbkFnZ3JlZ2F0b3JJbnB1dBIkCg1vYnNlcnZlcl9s",
            "aXN0GAEgASgLMg0uT2JzZXJ2ZXJMaXN0EiUKDm9mZl9jaGFpbl9pbmZvGAIg",
            "AygLMg0uT2ZmQ2hhaW5JbmZvEiEKGWV0aGVyZXVtX2NvbnRyYWN0X2FkZHJl",
            "c3MYAyABKAkSFQoNY29uZmlnX2RpZ2VzdBgEIAEoDBIbChNhZ2dyZWdhdGVf",
            "dGhyZXNob2xkGAUgASgFEjIKG2FnZ3JlZ2F0b3JfY29udHJhY3RfYWRkcmVz",
            "cxgGIAEoCzINLmFlbGYuQWRkcmVzcyJACgxPZmZDaGFpbkluZm8SFAoMdXJs",
            "X3RvX3F1ZXJ5GAEgASgJEhoKEmF0dHJpYnV0ZV90b19mZXRjaBgCIAEoCSJF",
            "Cg5HZXRSZXBvcnRJbnB1dBIhChlldGhlcmV1bV9jb250cmFjdF9hZGRyZXNz",
            "GAEgASgJEhAKCHJvdW5kX2lkGAIgASgDIl0KEkdldE1lcmtsZVBhdGhJbnB1",
            "dBIhChlldGhlcmV1bV9jb250cmFjdF9hZGRyZXNzGAEgASgJEhAKCHJvdW5k",
            "X2lkGAIgASgDEhIKCm5vZGVfaW5kZXgYAyABKAUihwEKDlJlcG9ydFByb3Bv",
            "c2VkEhcKBnJlcG9ydBgBIAEoCzIHLlJlcG9ydBIzChxvYnNlcnZlcl9hc3Nv",
            "Y2lhdGlvbl9hZGRyZXNzGAIgASgLMg0uYWVsZi5BZGRyZXNzEiEKGWV0aGVy",
            "ZXVtX2NvbnRyYWN0X2FkZHJlc3MYAyABKAk6BKC7GAEilAEKD1JlcG9ydENv",
            "bmZpcm1lZBIQCghyb3VuZF9pZBgBIAEoAxIRCglzaWduYXR1cmUYAiABKAkS",
            "Mwocb2JzZXJ2ZXJfYXNzb2NpYXRpb25fYWRkcmVzcxgDIAEoCzINLmFlbGYu",
            "QWRkcmVzcxIhChlldGhlcmV1bV9jb250cmFjdF9hZGRyZXNzGAQgASgJOgSg",
            "uxgBMsoJCg5SZXBvcnRDb250cmFjdBI4CgpJbml0aWFsaXplEhAuSW5pdGlh",
            "bGl6ZUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASLgoLUXVlcnlP",
            "cmFjbGUSES5RdWVyeU9yYWNsZUlucHV0GgouYWVsZi5IYXNoIgASOQoRQ2Fu",
            "Y2VsUXVlcnlPcmFjbGUSCi5hZWxmLkhhc2gaFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkiABI+Cg1Db25maXJtUmVwb3J0EhMuQ29uZmlybVJlcG9ydElucHV0",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASKgoNUHJvcG9zZVJlcG9ydBIO",
            "LkNhbGxiYWNrSW5wdXQaBy5SZXBvcnQiABJHCg5Nb3J0Z2FnZVRva2VucxIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlGhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5IgASRwoOV2l0aGRyYXdUb2tlbnMSGy5nb29nbGUucHJvdG9idWYu",
            "SW50NjRWYWx1ZRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkEKDUFwcGx5",
            "T2JzZXJ2ZXISFi5nb29nbGUucHJvdG9idWYuRW1wdHkaFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkiABJACgxRdWl0T2JzZXJ2ZXISFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJWCh1Qcm9wb3Nl",
            "QWRqdXN0QXBwbHlPYnNlcnZlckZlZRIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2",
            "NFZhbHVlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASTwoWQWRqdXN0QXBw",
            "bHlPYnNlcnZlckZlZRIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlGhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASVwoVQWRkT2ZmQ2hhaW5BZ2dyZWdh",
            "dG9yEhsuQWRkT2ZmQ2hhaW5BZ2dyZWdhdG9ySW5wdXQaHy5PZmZDaGFpbkFn",
            "Z3JlZ2F0b3JDb250cmFjdEluZm8iABI9Cg1HZXRNZXJrbGVQYXRoEhMuR2V0",
            "TWVya2xlUGF0aElucHV0GhAuYWVsZi5NZXJrbGVQYXRoIgWIifcBARIsCglH",
            "ZXRSZXBvcnQSDy5HZXRSZXBvcnRJbnB1dBoHLlJlcG9ydCIFiIn3AQESRwoM",
            "R2V0U2lnbmF0dXJlEhIuR2V0U2lnbmF0dXJlSW5wdXQaHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUiBYiJ9wEBEmkKIUdldE9mZkNoYWluQWdncmVn",
            "YXRvckNvbnRyYWN0SW5mbxIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRofLk9mZkNoYWluQWdncmVnYXRvckNvbnRyYWN0SW5mbyIFiIn3AQESPQoU",
            "R2V0UmVwb3J0UXVlcnlSZWNvcmQSCi5hZWxmLkhhc2gaEi5SZXBvcnRRdWVy",
            "eVJlY29yZCIFiIn3AQEaLrLM9gEpQUVsZi5Db250cmFjdHMuUmVwb3J0LlJl",
            "cG9ydENvbnRyYWN0U3RhdGVCGKoCFUFFbGYuQ29udHJhY3RzLlJlcG9ydGIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::CallbackInputReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.InitializeInput), global::AElf.Contracts.Report.InitializeInput.Parser, new[]{ "OracleContractAddress", "ReportFee", "ApplyObserverFee" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.QueryOracleInput), global::AElf.Contracts.Report.QueryOracleInput.Parser, new[]{ "Payment", "EthereumContractAddress", "AggregateThreshold", "AggregatorContractAddress", "NodeIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.ConfirmReportInput), global::AElf.Contracts.Report.ConfirmReportInput.Parser, new[]{ "EthereumContractAddress", "RoundId", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.Report), global::AElf.Contracts.Report.Report.Parser, new[]{ "QueryId", "RoundId", "Observations", "AggregatedData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.ReportQueryRecord), global::AElf.Contracts.Report.ReportQueryRecord.Parser, new[]{ "OriginQuerySender", "PaidReportFee" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.ObserverList), global::AElf.Contracts.Report.ObserverList.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.ProposeReportInput), global::AElf.Contracts.Report.ProposeReportInput.Parser, new[]{ "QueryIdList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.Observations), global::AElf.Contracts.Report.Observations.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.Observation), global::AElf.Contracts.Report.Observation.Parser, new[]{ "Key", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.GetSignatureInput), global::AElf.Contracts.Report.GetSignatureInput.Parser, new[]{ "EthereumContractAddress", "RoundId", "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.OffChainAggregatorContractInfo), global::AElf.Contracts.Report.OffChainAggregatorContractInfo.Parser, new[]{ "ObserverAssociationAddress", "OffChainInfo", "EthereumContractAddress", "ConfigDigest", "AggregateThreshold", "AggregatorContractAddress", "RoundIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.AddOffChainAggregatorInput), global::AElf.Contracts.Report.AddOffChainAggregatorInput.Parser, new[]{ "ObserverList", "OffChainInfo", "EthereumContractAddress", "ConfigDigest", "AggregateThreshold", "AggregatorContractAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.OffChainInfo), global::AElf.Contracts.Report.OffChainInfo.Parser, new[]{ "UrlToQuery", "AttributeToFetch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.GetReportInput), global::AElf.Contracts.Report.GetReportInput.Parser, new[]{ "EthereumContractAddress", "RoundId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.GetMerklePathInput), global::AElf.Contracts.Report.GetMerklePathInput.Parser, new[]{ "EthereumContractAddress", "RoundId", "NodeIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.ReportProposed), global::AElf.Contracts.Report.ReportProposed.Parser, new[]{ "Report", "ObserverAssociationAddress", "EthereumContractAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Report.ReportConfirmed), global::AElf.Contracts.Report.ReportConfirmed.Parser, new[]{ "RoundId", "Signature", "ObserverAssociationAddress", "EthereumContractAddress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InitializeInput : pb::IMessage<InitializeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput(InitializeInput other) : this() {
      oracleContractAddress_ = other.oracleContractAddress_ != null ? other.oracleContractAddress_.Clone() : null;
      reportFee_ = other.reportFee_;
      applyObserverFee_ = other.applyObserverFee_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "oracle_contract_address" field.</summary>
    public const int OracleContractAddressFieldNumber = 1;
    private global::AElf.Types.Address oracleContractAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address OracleContractAddress {
      get { return oracleContractAddress_; }
      set {
        oracleContractAddress_ = value;
      }
    }

    /// <summary>Field number for the "report_fee" field.</summary>
    public const int ReportFeeFieldNumber = 2;
    private long reportFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReportFee {
      get { return reportFee_; }
      set {
        reportFee_ = value;
      }
    }

    /// <summary>Field number for the "apply_observer_fee" field.</summary>
    public const int ApplyObserverFeeFieldNumber = 3;
    private long applyObserverFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ApplyObserverFee {
      get { return applyObserverFee_; }
      set {
        applyObserverFee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OracleContractAddress, other.OracleContractAddress)) return false;
      if (ReportFee != other.ReportFee) return false;
      if (ApplyObserverFee != other.ApplyObserverFee) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oracleContractAddress_ != null) hash ^= OracleContractAddress.GetHashCode();
      if (ReportFee != 0L) hash ^= ReportFee.GetHashCode();
      if (ApplyObserverFee != 0L) hash ^= ApplyObserverFee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (oracleContractAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OracleContractAddress);
      }
      if (ReportFee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReportFee);
      }
      if (ApplyObserverFee != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ApplyObserverFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (oracleContractAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OracleContractAddress);
      }
      if (ReportFee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReportFee);
      }
      if (ApplyObserverFee != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ApplyObserverFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oracleContractAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OracleContractAddress);
      }
      if (ReportFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReportFee);
      }
      if (ApplyObserverFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ApplyObserverFee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.oracleContractAddress_ != null) {
        if (oracleContractAddress_ == null) {
          OracleContractAddress = new global::AElf.Types.Address();
        }
        OracleContractAddress.MergeFrom(other.OracleContractAddress);
      }
      if (other.ReportFee != 0L) {
        ReportFee = other.ReportFee;
      }
      if (other.ApplyObserverFee != 0L) {
        ApplyObserverFee = other.ApplyObserverFee;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oracleContractAddress_ == null) {
              OracleContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(OracleContractAddress);
            break;
          }
          case 16: {
            ReportFee = input.ReadInt64();
            break;
          }
          case 24: {
            ApplyObserverFee = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (oracleContractAddress_ == null) {
              OracleContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(OracleContractAddress);
            break;
          }
          case 16: {
            ReportFee = input.ReadInt64();
            break;
          }
          case 24: {
            ApplyObserverFee = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QueryOracleInput : pb::IMessage<QueryOracleInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryOracleInput> _parser = new pb::MessageParser<QueryOracleInput>(() => new QueryOracleInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOracleInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOracleInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOracleInput(QueryOracleInput other) : this() {
      payment_ = other.payment_;
      ethereumContractAddress_ = other.ethereumContractAddress_;
      aggregateThreshold_ = other.aggregateThreshold_;
      aggregatorContractAddress_ = other.aggregatorContractAddress_ != null ? other.aggregatorContractAddress_.Clone() : null;
      nodeIndex_ = other.nodeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOracleInput Clone() {
      return new QueryOracleInput(this);
    }

    /// <summary>Field number for the "payment" field.</summary>
    public const int PaymentFieldNumber = 1;
    private long payment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Payment {
      get { return payment_; }
      set {
        payment_ = value;
      }
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 2;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aggregate_threshold" field.</summary>
    public const int AggregateThresholdFieldNumber = 3;
    private int aggregateThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AggregateThreshold {
      get { return aggregateThreshold_; }
      set {
        aggregateThreshold_ = value;
      }
    }

    /// <summary>Field number for the "aggregator_contract_address" field.</summary>
    public const int AggregatorContractAddressFieldNumber = 4;
    private global::AElf.Types.Address aggregatorContractAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AggregatorContractAddress {
      get { return aggregatorContractAddress_; }
      set {
        aggregatorContractAddress_ = value;
      }
    }

    /// <summary>Field number for the "node_index" field.</summary>
    public const int NodeIndexFieldNumber = 5;
    private int nodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeIndex {
      get { return nodeIndex_; }
      set {
        nodeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOracleInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOracleInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payment != other.Payment) return false;
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      if (AggregateThreshold != other.AggregateThreshold) return false;
      if (!object.Equals(AggregatorContractAddress, other.AggregatorContractAddress)) return false;
      if (NodeIndex != other.NodeIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payment != 0L) hash ^= Payment.GetHashCode();
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (AggregateThreshold != 0) hash ^= AggregateThreshold.GetHashCode();
      if (aggregatorContractAddress_ != null) hash ^= AggregatorContractAddress.GetHashCode();
      if (NodeIndex != 0) hash ^= NodeIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Payment != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Payment);
      }
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EthereumContractAddress);
      }
      if (AggregateThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AggregatorContractAddress);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Payment != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Payment);
      }
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EthereumContractAddress);
      }
      if (AggregateThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AggregatorContractAddress);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payment != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Payment);
      }
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (AggregateThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggregatorContractAddress);
      }
      if (NodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOracleInput other) {
      if (other == null) {
        return;
      }
      if (other.Payment != 0L) {
        Payment = other.Payment;
      }
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      if (other.AggregateThreshold != 0) {
        AggregateThreshold = other.AggregateThreshold;
      }
      if (other.aggregatorContractAddress_ != null) {
        if (aggregatorContractAddress_ == null) {
          AggregatorContractAddress = new global::AElf.Types.Address();
        }
        AggregatorContractAddress.MergeFrom(other.AggregatorContractAddress);
      }
      if (other.NodeIndex != 0) {
        NodeIndex = other.NodeIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Payment = input.ReadInt64();
            break;
          }
          case 18: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 24: {
            AggregateThreshold = input.ReadInt32();
            break;
          }
          case 34: {
            if (aggregatorContractAddress_ == null) {
              AggregatorContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(AggregatorContractAddress);
            break;
          }
          case 40: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Payment = input.ReadInt64();
            break;
          }
          case 18: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 24: {
            AggregateThreshold = input.ReadInt32();
            break;
          }
          case 34: {
            if (aggregatorContractAddress_ == null) {
              AggregatorContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(AggregatorContractAddress);
            break;
          }
          case 40: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConfirmReportInput : pb::IMessage<ConfirmReportInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfirmReportInput> _parser = new pb::MessageParser<ConfirmReportInput>(() => new ConfirmReportInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmReportInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmReportInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmReportInput(ConfirmReportInput other) : this() {
      ethereumContractAddress_ = other.ethereumContractAddress_;
      roundId_ = other.roundId_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmReportInput Clone() {
      return new ConfirmReportInput(this);
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 1;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 2;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmReportInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmReportInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      if (RoundId != other.RoundId) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmReportInput other) {
      if (other == null) {
        return;
      }
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 26: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 26: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Report : pb::IMessage<Report>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Report> _parser = new pb::MessageParser<Report>(() => new Report());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Report> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report(Report other) : this() {
      queryId_ = other.queryId_ != null ? other.queryId_.Clone() : null;
      roundId_ = other.roundId_;
      observations_ = other.observations_ != null ? other.observations_.Clone() : null;
      aggregatedData_ = other.aggregatedData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report Clone() {
      return new Report(this);
    }

    /// <summary>Field number for the "query_id" field.</summary>
    public const int QueryIdFieldNumber = 1;
    private global::AElf.Types.Hash queryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash QueryId {
      get { return queryId_; }
      set {
        queryId_ = value;
      }
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 2;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "observations" field.</summary>
    public const int ObservationsFieldNumber = 3;
    private global::AElf.Contracts.Report.Observations observations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Report.Observations Observations {
      get { return observations_; }
      set {
        observations_ = value;
      }
    }

    /// <summary>Field number for the "aggregated_data" field.</summary>
    public const int AggregatedDataFieldNumber = 4;
    private pb::ByteString aggregatedData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AggregatedData {
      get { return aggregatedData_; }
      set {
        aggregatedData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Report);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Report other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryId, other.QueryId)) return false;
      if (RoundId != other.RoundId) return false;
      if (!object.Equals(Observations, other.Observations)) return false;
      if (AggregatedData != other.AggregatedData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (queryId_ != null) hash ^= QueryId.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (observations_ != null) hash ^= Observations.GetHashCode();
      if (AggregatedData.Length != 0) hash ^= AggregatedData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (queryId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(QueryId);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (observations_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Observations);
      }
      if (AggregatedData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(AggregatedData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (queryId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(QueryId);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (observations_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Observations);
      }
      if (AggregatedData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(AggregatedData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (queryId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryId);
      }
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (observations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Observations);
      }
      if (AggregatedData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AggregatedData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Report other) {
      if (other == null) {
        return;
      }
      if (other.queryId_ != null) {
        if (queryId_ == null) {
          QueryId = new global::AElf.Types.Hash();
        }
        QueryId.MergeFrom(other.QueryId);
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.observations_ != null) {
        if (observations_ == null) {
          Observations = new global::AElf.Contracts.Report.Observations();
        }
        Observations.MergeFrom(other.Observations);
      }
      if (other.AggregatedData.Length != 0) {
        AggregatedData = other.AggregatedData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (queryId_ == null) {
              QueryId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(QueryId);
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 26: {
            if (observations_ == null) {
              Observations = new global::AElf.Contracts.Report.Observations();
            }
            input.ReadMessage(Observations);
            break;
          }
          case 34: {
            AggregatedData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (queryId_ == null) {
              QueryId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(QueryId);
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 26: {
            if (observations_ == null) {
              Observations = new global::AElf.Contracts.Report.Observations();
            }
            input.ReadMessage(Observations);
            break;
          }
          case 34: {
            AggregatedData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReportQueryRecord : pb::IMessage<ReportQueryRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportQueryRecord> _parser = new pb::MessageParser<ReportQueryRecord>(() => new ReportQueryRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportQueryRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportQueryRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportQueryRecord(ReportQueryRecord other) : this() {
      originQuerySender_ = other.originQuerySender_ != null ? other.originQuerySender_.Clone() : null;
      paidReportFee_ = other.paidReportFee_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportQueryRecord Clone() {
      return new ReportQueryRecord(this);
    }

    /// <summary>Field number for the "origin_query_sender" field.</summary>
    public const int OriginQuerySenderFieldNumber = 1;
    private global::AElf.Types.Address originQuerySender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address OriginQuerySender {
      get { return originQuerySender_; }
      set {
        originQuerySender_ = value;
      }
    }

    /// <summary>Field number for the "paid_report_fee" field.</summary>
    public const int PaidReportFeeFieldNumber = 2;
    private long paidReportFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PaidReportFee {
      get { return paidReportFee_; }
      set {
        paidReportFee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportQueryRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportQueryRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OriginQuerySender, other.OriginQuerySender)) return false;
      if (PaidReportFee != other.PaidReportFee) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (originQuerySender_ != null) hash ^= OriginQuerySender.GetHashCode();
      if (PaidReportFee != 0L) hash ^= PaidReportFee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (originQuerySender_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginQuerySender);
      }
      if (PaidReportFee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PaidReportFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (originQuerySender_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginQuerySender);
      }
      if (PaidReportFee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PaidReportFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (originQuerySender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginQuerySender);
      }
      if (PaidReportFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PaidReportFee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportQueryRecord other) {
      if (other == null) {
        return;
      }
      if (other.originQuerySender_ != null) {
        if (originQuerySender_ == null) {
          OriginQuerySender = new global::AElf.Types.Address();
        }
        OriginQuerySender.MergeFrom(other.OriginQuerySender);
      }
      if (other.PaidReportFee != 0L) {
        PaidReportFee = other.PaidReportFee;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (originQuerySender_ == null) {
              OriginQuerySender = new global::AElf.Types.Address();
            }
            input.ReadMessage(OriginQuerySender);
            break;
          }
          case 16: {
            PaidReportFee = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (originQuerySender_ == null) {
              OriginQuerySender = new global::AElf.Types.Address();
            }
            input.ReadMessage(OriginQuerySender);
            break;
          }
          case 16: {
            PaidReportFee = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObserverList : pb::IMessage<ObserverList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObserverList> _parser = new pb::MessageParser<ObserverList>(() => new ObserverList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObserverList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserverList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserverList(ObserverList other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserverList Clone() {
      return new ObserverList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> value_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObserverList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObserverList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObserverList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProposeReportInput : pb::IMessage<ProposeReportInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProposeReportInput> _parser = new pb::MessageParser<ProposeReportInput>(() => new ProposeReportInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposeReportInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposeReportInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposeReportInput(ProposeReportInput other) : this() {
      queryIdList_ = other.queryIdList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposeReportInput Clone() {
      return new ProposeReportInput(this);
    }

    /// <summary>Field number for the "query_id_list" field.</summary>
    public const int QueryIdListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_queryIdList_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> queryIdList_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> QueryIdList {
      get { return queryIdList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposeReportInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposeReportInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!queryIdList_.Equals(other.queryIdList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= queryIdList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      queryIdList_.WriteTo(output, _repeated_queryIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      queryIdList_.WriteTo(ref output, _repeated_queryIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += queryIdList_.CalculateSize(_repeated_queryIdList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposeReportInput other) {
      if (other == null) {
        return;
      }
      queryIdList_.Add(other.queryIdList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            queryIdList_.AddEntriesFrom(input, _repeated_queryIdList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            queryIdList_.AddEntriesFrom(ref input, _repeated_queryIdList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Observations : pb::IMessage<Observations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Observations> _parser = new pb::MessageParser<Observations>(() => new Observations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Observations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observations(Observations other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observations Clone() {
      return new Observations(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Report.Observation> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Contracts.Report.Observation.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Report.Observation> value_ = new pbc::RepeatedField<global::AElf.Contracts.Report.Observation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Report.Observation> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Observations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Observations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Observations other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Observation : pb::IMessage<Observation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Observation> _parser = new pb::MessageParser<Observation>(() => new Observation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Observation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observation(Observation other) : this() {
      key_ = other.key_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observation Clone() {
      return new Observation(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Observation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Observation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Observation other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetSignatureInput : pb::IMessage<GetSignatureInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSignatureInput> _parser = new pb::MessageParser<GetSignatureInput>(() => new GetSignatureInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSignatureInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignatureInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignatureInput(GetSignatureInput other) : this() {
      ethereumContractAddress_ = other.ethereumContractAddress_;
      roundId_ = other.roundId_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignatureInput Clone() {
      return new GetSignatureInput(this);
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 1;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 2;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private global::AElf.Types.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSignatureInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSignatureInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      if (RoundId != other.RoundId) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (address_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (address_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSignatureInput other) {
      if (other == null) {
        return;
      }
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Types.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 26: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 26: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OffChainAggregatorContractInfo : pb::IMessage<OffChainAggregatorContractInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OffChainAggregatorContractInfo> _parser = new pb::MessageParser<OffChainAggregatorContractInfo>(() => new OffChainAggregatorContractInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OffChainAggregatorContractInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffChainAggregatorContractInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffChainAggregatorContractInfo(OffChainAggregatorContractInfo other) : this() {
      observerAssociationAddress_ = other.observerAssociationAddress_ != null ? other.observerAssociationAddress_.Clone() : null;
      offChainInfo_ = other.offChainInfo_.Clone();
      ethereumContractAddress_ = other.ethereumContractAddress_;
      configDigest_ = other.configDigest_;
      aggregateThreshold_ = other.aggregateThreshold_;
      aggregatorContractAddress_ = other.aggregatorContractAddress_ != null ? other.aggregatorContractAddress_.Clone() : null;
      roundIds_ = other.roundIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffChainAggregatorContractInfo Clone() {
      return new OffChainAggregatorContractInfo(this);
    }

    /// <summary>Field number for the "observer_association_address" field.</summary>
    public const int ObserverAssociationAddressFieldNumber = 1;
    private global::AElf.Types.Address observerAssociationAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ObserverAssociationAddress {
      get { return observerAssociationAddress_; }
      set {
        observerAssociationAddress_ = value;
      }
    }

    /// <summary>Field number for the "off_chain_info" field.</summary>
    public const int OffChainInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Report.OffChainInfo> _repeated_offChainInfo_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Contracts.Report.OffChainInfo.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Report.OffChainInfo> offChainInfo_ = new pbc::RepeatedField<global::AElf.Contracts.Report.OffChainInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Report.OffChainInfo> OffChainInfo {
      get { return offChainInfo_; }
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 3;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_digest" field.</summary>
    public const int ConfigDigestFieldNumber = 4;
    private pb::ByteString configDigest_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ConfigDigest {
      get { return configDigest_; }
      set {
        configDigest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aggregate_threshold" field.</summary>
    public const int AggregateThresholdFieldNumber = 5;
    private int aggregateThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AggregateThreshold {
      get { return aggregateThreshold_; }
      set {
        aggregateThreshold_ = value;
      }
    }

    /// <summary>Field number for the "aggregator_contract_address" field.</summary>
    public const int AggregatorContractAddressFieldNumber = 6;
    private global::AElf.Types.Address aggregatorContractAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AggregatorContractAddress {
      get { return aggregatorContractAddress_; }
      set {
        aggregatorContractAddress_ = value;
      }
    }

    /// <summary>Field number for the "round_ids" field.</summary>
    public const int RoundIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_roundIds_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> roundIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RoundIds {
      get { return roundIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OffChainAggregatorContractInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OffChainAggregatorContractInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObserverAssociationAddress, other.ObserverAssociationAddress)) return false;
      if(!offChainInfo_.Equals(other.offChainInfo_)) return false;
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      if (ConfigDigest != other.ConfigDigest) return false;
      if (AggregateThreshold != other.AggregateThreshold) return false;
      if (!object.Equals(AggregatorContractAddress, other.AggregatorContractAddress)) return false;
      if(!roundIds_.Equals(other.roundIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (observerAssociationAddress_ != null) hash ^= ObserverAssociationAddress.GetHashCode();
      hash ^= offChainInfo_.GetHashCode();
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (ConfigDigest.Length != 0) hash ^= ConfigDigest.GetHashCode();
      if (AggregateThreshold != 0) hash ^= AggregateThreshold.GetHashCode();
      if (aggregatorContractAddress_ != null) hash ^= AggregatorContractAddress.GetHashCode();
      hash ^= roundIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (observerAssociationAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObserverAssociationAddress);
      }
      offChainInfo_.WriteTo(output, _repeated_offChainInfo_codec);
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EthereumContractAddress);
      }
      if (ConfigDigest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ConfigDigest);
      }
      if (AggregateThreshold != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AggregatorContractAddress);
      }
      roundIds_.WriteTo(output, _repeated_roundIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (observerAssociationAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObserverAssociationAddress);
      }
      offChainInfo_.WriteTo(ref output, _repeated_offChainInfo_codec);
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EthereumContractAddress);
      }
      if (ConfigDigest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ConfigDigest);
      }
      if (AggregateThreshold != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AggregatorContractAddress);
      }
      roundIds_.WriteTo(ref output, _repeated_roundIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (observerAssociationAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObserverAssociationAddress);
      }
      size += offChainInfo_.CalculateSize(_repeated_offChainInfo_codec);
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (ConfigDigest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConfigDigest);
      }
      if (AggregateThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggregatorContractAddress);
      }
      size += roundIds_.CalculateSize(_repeated_roundIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OffChainAggregatorContractInfo other) {
      if (other == null) {
        return;
      }
      if (other.observerAssociationAddress_ != null) {
        if (observerAssociationAddress_ == null) {
          ObserverAssociationAddress = new global::AElf.Types.Address();
        }
        ObserverAssociationAddress.MergeFrom(other.ObserverAssociationAddress);
      }
      offChainInfo_.Add(other.offChainInfo_);
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      if (other.ConfigDigest.Length != 0) {
        ConfigDigest = other.ConfigDigest;
      }
      if (other.AggregateThreshold != 0) {
        AggregateThreshold = other.AggregateThreshold;
      }
      if (other.aggregatorContractAddress_ != null) {
        if (aggregatorContractAddress_ == null) {
          AggregatorContractAddress = new global::AElf.Types.Address();
        }
        AggregatorContractAddress.MergeFrom(other.AggregatorContractAddress);
      }
      roundIds_.Add(other.roundIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (observerAssociationAddress_ == null) {
              ObserverAssociationAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ObserverAssociationAddress);
            break;
          }
          case 18: {
            offChainInfo_.AddEntriesFrom(input, _repeated_offChainInfo_codec);
            break;
          }
          case 26: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 34: {
            ConfigDigest = input.ReadBytes();
            break;
          }
          case 40: {
            AggregateThreshold = input.ReadInt32();
            break;
          }
          case 50: {
            if (aggregatorContractAddress_ == null) {
              AggregatorContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(AggregatorContractAddress);
            break;
          }
          case 58:
          case 56: {
            roundIds_.AddEntriesFrom(input, _repeated_roundIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (observerAssociationAddress_ == null) {
              ObserverAssociationAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ObserverAssociationAddress);
            break;
          }
          case 18: {
            offChainInfo_.AddEntriesFrom(ref input, _repeated_offChainInfo_codec);
            break;
          }
          case 26: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 34: {
            ConfigDigest = input.ReadBytes();
            break;
          }
          case 40: {
            AggregateThreshold = input.ReadInt32();
            break;
          }
          case 50: {
            if (aggregatorContractAddress_ == null) {
              AggregatorContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(AggregatorContractAddress);
            break;
          }
          case 58:
          case 56: {
            roundIds_.AddEntriesFrom(ref input, _repeated_roundIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddOffChainAggregatorInput : pb::IMessage<AddOffChainAggregatorInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddOffChainAggregatorInput> _parser = new pb::MessageParser<AddOffChainAggregatorInput>(() => new AddOffChainAggregatorInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddOffChainAggregatorInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOffChainAggregatorInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOffChainAggregatorInput(AddOffChainAggregatorInput other) : this() {
      observerList_ = other.observerList_ != null ? other.observerList_.Clone() : null;
      offChainInfo_ = other.offChainInfo_.Clone();
      ethereumContractAddress_ = other.ethereumContractAddress_;
      configDigest_ = other.configDigest_;
      aggregateThreshold_ = other.aggregateThreshold_;
      aggregatorContractAddress_ = other.aggregatorContractAddress_ != null ? other.aggregatorContractAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOffChainAggregatorInput Clone() {
      return new AddOffChainAggregatorInput(this);
    }

    /// <summary>Field number for the "observer_list" field.</summary>
    public const int ObserverListFieldNumber = 1;
    private global::AElf.Contracts.Report.ObserverList observerList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Report.ObserverList ObserverList {
      get { return observerList_; }
      set {
        observerList_ = value;
      }
    }

    /// <summary>Field number for the "off_chain_info" field.</summary>
    public const int OffChainInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Report.OffChainInfo> _repeated_offChainInfo_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Contracts.Report.OffChainInfo.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Report.OffChainInfo> offChainInfo_ = new pbc::RepeatedField<global::AElf.Contracts.Report.OffChainInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Report.OffChainInfo> OffChainInfo {
      get { return offChainInfo_; }
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 3;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_digest" field.</summary>
    public const int ConfigDigestFieldNumber = 4;
    private pb::ByteString configDigest_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ConfigDigest {
      get { return configDigest_; }
      set {
        configDigest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aggregate_threshold" field.</summary>
    public const int AggregateThresholdFieldNumber = 5;
    private int aggregateThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AggregateThreshold {
      get { return aggregateThreshold_; }
      set {
        aggregateThreshold_ = value;
      }
    }

    /// <summary>Field number for the "aggregator_contract_address" field.</summary>
    public const int AggregatorContractAddressFieldNumber = 6;
    private global::AElf.Types.Address aggregatorContractAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address AggregatorContractAddress {
      get { return aggregatorContractAddress_; }
      set {
        aggregatorContractAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddOffChainAggregatorInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddOffChainAggregatorInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObserverList, other.ObserverList)) return false;
      if(!offChainInfo_.Equals(other.offChainInfo_)) return false;
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      if (ConfigDigest != other.ConfigDigest) return false;
      if (AggregateThreshold != other.AggregateThreshold) return false;
      if (!object.Equals(AggregatorContractAddress, other.AggregatorContractAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (observerList_ != null) hash ^= ObserverList.GetHashCode();
      hash ^= offChainInfo_.GetHashCode();
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (ConfigDigest.Length != 0) hash ^= ConfigDigest.GetHashCode();
      if (AggregateThreshold != 0) hash ^= AggregateThreshold.GetHashCode();
      if (aggregatorContractAddress_ != null) hash ^= AggregatorContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (observerList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObserverList);
      }
      offChainInfo_.WriteTo(output, _repeated_offChainInfo_codec);
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EthereumContractAddress);
      }
      if (ConfigDigest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ConfigDigest);
      }
      if (AggregateThreshold != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AggregatorContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (observerList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObserverList);
      }
      offChainInfo_.WriteTo(ref output, _repeated_offChainInfo_codec);
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EthereumContractAddress);
      }
      if (ConfigDigest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ConfigDigest);
      }
      if (AggregateThreshold != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AggregatorContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (observerList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObserverList);
      }
      size += offChainInfo_.CalculateSize(_repeated_offChainInfo_codec);
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (ConfigDigest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConfigDigest);
      }
      if (AggregateThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AggregateThreshold);
      }
      if (aggregatorContractAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggregatorContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddOffChainAggregatorInput other) {
      if (other == null) {
        return;
      }
      if (other.observerList_ != null) {
        if (observerList_ == null) {
          ObserverList = new global::AElf.Contracts.Report.ObserverList();
        }
        ObserverList.MergeFrom(other.ObserverList);
      }
      offChainInfo_.Add(other.offChainInfo_);
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      if (other.ConfigDigest.Length != 0) {
        ConfigDigest = other.ConfigDigest;
      }
      if (other.AggregateThreshold != 0) {
        AggregateThreshold = other.AggregateThreshold;
      }
      if (other.aggregatorContractAddress_ != null) {
        if (aggregatorContractAddress_ == null) {
          AggregatorContractAddress = new global::AElf.Types.Address();
        }
        AggregatorContractAddress.MergeFrom(other.AggregatorContractAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (observerList_ == null) {
              ObserverList = new global::AElf.Contracts.Report.ObserverList();
            }
            input.ReadMessage(ObserverList);
            break;
          }
          case 18: {
            offChainInfo_.AddEntriesFrom(input, _repeated_offChainInfo_codec);
            break;
          }
          case 26: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 34: {
            ConfigDigest = input.ReadBytes();
            break;
          }
          case 40: {
            AggregateThreshold = input.ReadInt32();
            break;
          }
          case 50: {
            if (aggregatorContractAddress_ == null) {
              AggregatorContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(AggregatorContractAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (observerList_ == null) {
              ObserverList = new global::AElf.Contracts.Report.ObserverList();
            }
            input.ReadMessage(ObserverList);
            break;
          }
          case 18: {
            offChainInfo_.AddEntriesFrom(ref input, _repeated_offChainInfo_codec);
            break;
          }
          case 26: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 34: {
            ConfigDigest = input.ReadBytes();
            break;
          }
          case 40: {
            AggregateThreshold = input.ReadInt32();
            break;
          }
          case 50: {
            if (aggregatorContractAddress_ == null) {
              AggregatorContractAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(AggregatorContractAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OffChainInfo : pb::IMessage<OffChainInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OffChainInfo> _parser = new pb::MessageParser<OffChainInfo>(() => new OffChainInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OffChainInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffChainInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffChainInfo(OffChainInfo other) : this() {
      urlToQuery_ = other.urlToQuery_;
      attributeToFetch_ = other.attributeToFetch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffChainInfo Clone() {
      return new OffChainInfo(this);
    }

    /// <summary>Field number for the "url_to_query" field.</summary>
    public const int UrlToQueryFieldNumber = 1;
    private string urlToQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UrlToQuery {
      get { return urlToQuery_; }
      set {
        urlToQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attribute_to_fetch" field.</summary>
    public const int AttributeToFetchFieldNumber = 2;
    private string attributeToFetch_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttributeToFetch {
      get { return attributeToFetch_; }
      set {
        attributeToFetch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OffChainInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OffChainInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UrlToQuery != other.UrlToQuery) return false;
      if (AttributeToFetch != other.AttributeToFetch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UrlToQuery.Length != 0) hash ^= UrlToQuery.GetHashCode();
      if (AttributeToFetch.Length != 0) hash ^= AttributeToFetch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UrlToQuery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UrlToQuery);
      }
      if (AttributeToFetch.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AttributeToFetch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UrlToQuery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UrlToQuery);
      }
      if (AttributeToFetch.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AttributeToFetch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UrlToQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UrlToQuery);
      }
      if (AttributeToFetch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeToFetch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OffChainInfo other) {
      if (other == null) {
        return;
      }
      if (other.UrlToQuery.Length != 0) {
        UrlToQuery = other.UrlToQuery;
      }
      if (other.AttributeToFetch.Length != 0) {
        AttributeToFetch = other.AttributeToFetch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UrlToQuery = input.ReadString();
            break;
          }
          case 18: {
            AttributeToFetch = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UrlToQuery = input.ReadString();
            break;
          }
          case 18: {
            AttributeToFetch = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetReportInput : pb::IMessage<GetReportInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetReportInput> _parser = new pb::MessageParser<GetReportInput>(() => new GetReportInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReportInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReportInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReportInput(GetReportInput other) : this() {
      ethereumContractAddress_ = other.ethereumContractAddress_;
      roundId_ = other.roundId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReportInput Clone() {
      return new GetReportInput(this);
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 1;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 2;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReportInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReportInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      if (RoundId != other.RoundId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReportInput other) {
      if (other == null) {
        return;
      }
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetMerklePathInput : pb::IMessage<GetMerklePathInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMerklePathInput> _parser = new pb::MessageParser<GetMerklePathInput>(() => new GetMerklePathInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMerklePathInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerklePathInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerklePathInput(GetMerklePathInput other) : this() {
      ethereumContractAddress_ = other.ethereumContractAddress_;
      roundId_ = other.roundId_;
      nodeIndex_ = other.nodeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerklePathInput Clone() {
      return new GetMerklePathInput(this);
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 1;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 2;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "node_index" field.</summary>
    public const int NodeIndexFieldNumber = 3;
    private int nodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeIndex {
      get { return nodeIndex_; }
      set {
        nodeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMerklePathInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMerklePathInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      if (RoundId != other.RoundId) return false;
      if (NodeIndex != other.NodeIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (NodeIndex != 0) hash ^= NodeIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (NodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMerklePathInput other) {
      if (other == null) {
        return;
      }
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.NodeIndex != 0) {
        NodeIndex = other.NodeIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 24: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EthereumContractAddress = input.ReadString();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 24: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReportProposed : pb::IMessage<ReportProposed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportProposed> _parser = new pb::MessageParser<ReportProposed>(() => new ReportProposed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportProposed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportProposed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportProposed(ReportProposed other) : this() {
      report_ = other.report_ != null ? other.report_.Clone() : null;
      observerAssociationAddress_ = other.observerAssociationAddress_ != null ? other.observerAssociationAddress_.Clone() : null;
      ethereumContractAddress_ = other.ethereumContractAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportProposed Clone() {
      return new ReportProposed(this);
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 1;
    private global::AElf.Contracts.Report.Report report_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Report.Report Report {
      get { return report_; }
      set {
        report_ = value;
      }
    }

    /// <summary>Field number for the "observer_association_address" field.</summary>
    public const int ObserverAssociationAddressFieldNumber = 2;
    private global::AElf.Types.Address observerAssociationAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ObserverAssociationAddress {
      get { return observerAssociationAddress_; }
      set {
        observerAssociationAddress_ = value;
      }
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 3;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportProposed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportProposed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Report, other.Report)) return false;
      if (!object.Equals(ObserverAssociationAddress, other.ObserverAssociationAddress)) return false;
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (report_ != null) hash ^= Report.GetHashCode();
      if (observerAssociationAddress_ != null) hash ^= ObserverAssociationAddress.GetHashCode();
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (report_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Report);
      }
      if (observerAssociationAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ObserverAssociationAddress);
      }
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EthereumContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (report_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Report);
      }
      if (observerAssociationAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ObserverAssociationAddress);
      }
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EthereumContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (report_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Report);
      }
      if (observerAssociationAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObserverAssociationAddress);
      }
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportProposed other) {
      if (other == null) {
        return;
      }
      if (other.report_ != null) {
        if (report_ == null) {
          Report = new global::AElf.Contracts.Report.Report();
        }
        Report.MergeFrom(other.Report);
      }
      if (other.observerAssociationAddress_ != null) {
        if (observerAssociationAddress_ == null) {
          ObserverAssociationAddress = new global::AElf.Types.Address();
        }
        ObserverAssociationAddress.MergeFrom(other.ObserverAssociationAddress);
      }
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (report_ == null) {
              Report = new global::AElf.Contracts.Report.Report();
            }
            input.ReadMessage(Report);
            break;
          }
          case 18: {
            if (observerAssociationAddress_ == null) {
              ObserverAssociationAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ObserverAssociationAddress);
            break;
          }
          case 26: {
            EthereumContractAddress = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (report_ == null) {
              Report = new global::AElf.Contracts.Report.Report();
            }
            input.ReadMessage(Report);
            break;
          }
          case 18: {
            if (observerAssociationAddress_ == null) {
              ObserverAssociationAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ObserverAssociationAddress);
            break;
          }
          case 26: {
            EthereumContractAddress = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReportConfirmed : pb::IMessage<ReportConfirmed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportConfirmed> _parser = new pb::MessageParser<ReportConfirmed>(() => new ReportConfirmed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportConfirmed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Report.ReportContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportConfirmed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportConfirmed(ReportConfirmed other) : this() {
      roundId_ = other.roundId_;
      signature_ = other.signature_;
      observerAssociationAddress_ = other.observerAssociationAddress_ != null ? other.observerAssociationAddress_.Clone() : null;
      ethereumContractAddress_ = other.ethereumContractAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportConfirmed Clone() {
      return new ReportConfirmed(this);
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 1;
    private long roundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "observer_association_address" field.</summary>
    public const int ObserverAssociationAddressFieldNumber = 3;
    private global::AElf.Types.Address observerAssociationAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ObserverAssociationAddress {
      get { return observerAssociationAddress_; }
      set {
        observerAssociationAddress_ = value;
      }
    }

    /// <summary>Field number for the "ethereum_contract_address" field.</summary>
    public const int EthereumContractAddressFieldNumber = 4;
    private string ethereumContractAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EthereumContractAddress {
      get { return ethereumContractAddress_; }
      set {
        ethereumContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportConfirmed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportConfirmed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundId != other.RoundId) return false;
      if (Signature != other.Signature) return false;
      if (!object.Equals(ObserverAssociationAddress, other.ObserverAssociationAddress)) return false;
      if (EthereumContractAddress != other.EthereumContractAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (observerAssociationAddress_ != null) hash ^= ObserverAssociationAddress.GetHashCode();
      if (EthereumContractAddress.Length != 0) hash ^= EthereumContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundId);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (observerAssociationAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObserverAssociationAddress);
      }
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EthereumContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundId);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (observerAssociationAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObserverAssociationAddress);
      }
      if (EthereumContractAddress.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EthereumContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (observerAssociationAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObserverAssociationAddress);
      }
      if (EthereumContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EthereumContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportConfirmed other) {
      if (other == null) {
        return;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.observerAssociationAddress_ != null) {
        if (observerAssociationAddress_ == null) {
          ObserverAssociationAddress = new global::AElf.Types.Address();
        }
        ObserverAssociationAddress.MergeFrom(other.ObserverAssociationAddress);
      }
      if (other.EthereumContractAddress.Length != 0) {
        EthereumContractAddress = other.EthereumContractAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundId = input.ReadInt64();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 26: {
            if (observerAssociationAddress_ == null) {
              ObserverAssociationAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ObserverAssociationAddress);
            break;
          }
          case 34: {
            EthereumContractAddress = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundId = input.ReadInt64();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 26: {
            if (observerAssociationAddress_ == null) {
              ObserverAssociationAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ObserverAssociationAddress);
            break;
          }
          case 34: {
            EthereumContractAddress = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
