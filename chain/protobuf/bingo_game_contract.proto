syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "AElf.Contracts.BingoGameContract";

service BingoGameContract {
    option (aelf.csharp_state) = "AElf.Contracts.BingoGameContract.BingoGameContractState";
    
    // Actions
    // 1. call Initial at first if you deploy the contract to blockchain.
    rpc Initial (google.protobuf.Empty) returns (google.protobuf.Empty) {
    }
    // Buy or Bet 
    rpc Play (PlayInput) returns (aelf.SInt64Value) {
    }
    // Waiting few seconds, you can draw the prize.
    // Play -> waiting seconds -> Bingo
    rpc Bingo (aelf.Hash) returns (BingoOutput) {
    }
    // Views
    rpc GetAward (aelf.Hash) returns (aelf.SInt64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetPlayerInformation (aelf.Address) returns (PlayerInformation) {
        option (aelf.is_view) = true;
    }
}

message PlayInput {
    sint64 buy_amount = 1;
    // type = {1: small, 2: big}
    sint64 buy_type = 2;
    string token_symbol = 3;
}

message BingoOutput {
    sint64 random = 1;
    bool is_win = 2;
    sint64 bout_type = 3;
    sint64 award = 4;
}

message PlayerInformation {
    aelf.Hash seed = 1;
    repeated BoutInformation bouts = 2;
}

message BoutInformation {
    sint64 play_round_number = 1;
    sint64 amount = 2;
    sint64 award = 3;
    bool is_complete = 4;
    aelf.Hash play_id = 5;
    sint64 bingo_round_number = 6;
    sint64 bout_type = 7;
    string token_symbol = 8;
}