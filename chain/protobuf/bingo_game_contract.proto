syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Contracts.BingoGameContract";

service BingoGameContract {
    option (aelf.csharp_state) = "AElf.Contracts.BingoGameContract.BingoGameContractState";
    
    // Actions
    rpc Register (google.protobuf.Empty) returns (google.protobuf.Empty) {
    }
    rpc Play (google.protobuf.Int64Value) returns (google.protobuf.Int64Value) {
    }
    rpc Bingo (aelf.Hash) returns (google.protobuf.BoolValue) {
    }
    rpc Quit (google.protobuf.Empty) returns (google.protobuf.Empty) {
    }
    rpc Roll (RollInput) returns (RollOutput) {
    }
    
    // Views
    rpc GetAward (aelf.Hash) returns (google.protobuf.Int64Value) {
        option (aelf.is_view) = true;
    }
    rpc GetPlayerInformation (aelf.Address) returns (PlayerInformation) {
        option (aelf.is_view) = true;
    }
    rpc GetRollNumbers(GetRollNumbersInput) returns(GetRollNumbersOutput){
        option (aelf.is_view) = true;
    }
}

message PlayerInformation {
    aelf.Hash seed = 1;
    repeated BoutInformation bouts = 2;
    google.protobuf.Timestamp register_time = 3;
}

message BoutInformation {
    int64 play_block_height = 1;
    int64 amount = 2;
    int64 award = 3;
    bool is_complete = 4;
    aelf.Hash play_id = 5;
    int64 bingo_block_height = 6;
}
message RollInput{
    int64 roll_result_count = 1;
    RollData  roll_data_original = 2;  
}
message RollData{
  repeated string data = 1;  
}
message RollOutput{
    RollData  roll_data_result = 1;
    int64  block_height = 2;
}
message GetRollNumbersInput{
    RollInput  roll_input = 1;
    int64  block_height = 2;
}
message GetRollNumbersOutput{
    repeated int64 roll_number = 1;
}
message Roll{
    option (aelf.is_event) = true;
    RollData   roll_data_original = 1;
    RollData   roll_data_result = 2;
    int64 roll_result_count = 3;
    int64  block_height = 4;
}